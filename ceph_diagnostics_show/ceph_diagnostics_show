#!/bin/sh

CDS_DIR=$(dirname $(readlink -f $0))
CDS_COMMANDS_DIR=${CDS_DIR}/commands

export CEPH_DIAGNOSTICS_COLLECT_DIR

help() {
    local cmd

    if [ -n "$1" ]; then
        cmd="$1"
        run_cmd "$cmd" help
        return $?
    fi

    echo "Ceph Diagnostics Show"
    echo ""
    echo "usage: $(basename $0) <command> [options] [args]"
    echo ""
    echo "Commands:"
    echo ""

    local max_len=10
    for cmd in $(ls ${CDS_COMMANDS_DIR}); do
        local len=$(echo $cmd | wc -c)
        if [ $len -gt $max_len ]; then
            max_len=$len
        fi
    done
    for cmd in $(ls ${CDS_COMMANDS_DIR}); do
        local description="$(${CDS_COMMANDS_DIR}/${cmd} description)"
        printf "  %-${max_len}s  %s\n" "${cmd}" "${description}"
    done

    if [ -z "${CEPH_DIAGNOSTICS_COLLECT_DIR}" ] || \
	   ! [ -d "${CEPH_DIAGNOSTICS_COLLECT_DIR}/COMMANDS" ]; then
        return
    fi

    echo ''
    echo "Ceph Diagnostics Collect directory: ${CEPH_DIAGNOSTICS_COLLECT_DIR}"
    echo ''
    echo 'You may also run `cds <collected command>` for collected commands:'
    echo ''
    ls -1 "${CEPH_DIAGNOSTICS_COLLECT_DIR}/COMMANDS" | sed -e 's/^/  /'
    echo ''
}

set_ceph_diagnostics_collect_dir() {
    test -n "${CEPH_DIAGNOSTICS_COLLECT_DIR}" && return
    local allow_missing=0
    if [ "$1" = "--allow-missing" ]; then
        allow_missing=1
    fi

    local dir=$(pwd)

    while [ "${dir}" != / ]; do
        if [ -e "${dir}/ceph_cluster_info-fsid" ]; then
            break
        fi
        dir=$(dirname "${dir}")
    done
    if [ -e "${dir}/ceph_cluster_info-fsid" ]; then
        CEPH_DIAGNOSTICS_COLLECT_DIR="${dir}"
        return 0
    elif [ ${allow_missing} -eq 1 ]; then
        # Directory not found, but missing is allowed (e.g., for help)
        return 0
    else
        echo "$(basename $0) should be run inside ceph-collect directory" >&2
        exit 1
    fi
}

run_cmd() {
    local orig_cmd=$1 cmd=$1 orig_args="$@"
    shift

    if cat "${CEPH_DIAGNOSTICS_COLLECT_DIR}/COMMANDS/${orig_args}" 2>/dev/null
    then
        exit 0
    fi

    while ! test -x ${CDS_COMMANDS_DIR}/${cmd}; do
        test -z "$1" && break
        cmd=${cmd}-$1
        shift
    done

    if ! test -x ${CDS_COMMANDS_DIR}/${cmd}; then
	echo "unknown command: ${orig_cmd}" >&2
	exit 1
    fi

    ${CDS_COMMANDS_DIR}/${cmd} $@
}

#
# Main
#

if [ -z "$1" ] || [ "$1" = help ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    # (e.g., cds help pool)
    if [ "$1" = help ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        shift
    fi
    set_ceph_diagnostics_collect_dir --allow-missing
    help $@
else
    set_ceph_diagnostics_collect_dir
    run_cmd $@
fi

